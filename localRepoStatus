#!/bin/bash

# Session Name
SESSION="git"

# Check if the session already exists
tmux has-session -t $SESSION 2>/dev/null
if [ $? != 0 ]; then
    # Start a new session with the specified name
    tmux new-session -d -s $SESSION -n 'Nvim'

    # Navigate to the FastAPI directory and start the FastAPI application
    tmux send-keys -t $SESSION:1 "cd $HOME/.nvim/" C-m
    tmux send-keys -t $SESSION:1 'git status' C-m

    # FastAPI backend
    tmux new-window -t $SESSION -n 'Dotfiles'
    tmux send-keys -t $SESSION:2 "cd $HOME/.dotfiles/" C-m
    tmux send-keys -t $SESSION:2 'git status' C-m

    # React app frontend
    tmux new-window -t $SESSION -n 'Bash scripts'
    tmux send-keys -t $SESSION:3 "cd $HOME/.local/bin/" C-m
    tmux send-keys -t $SESSION:3 'git status' C-m

    # Run ansible app maintainance script
    tmux new-window -t $SESSION -n 'Docker Scripts'
    tmux send-keys -t $SESSION:4 "cd $HOME/.docker_scripts" C-m
    tmux send-keys -t $SESSION:4 'git status' C-m

    # Run ansible app maintainance script
    tmux new-window -t $SESSION -n 'Dmenu'
    tmux send-keys -t $SESSION:5 "cd $HOME/.suckless/dmenu/" C-m
    tmux send-keys -t $SESSION:5 'git status' C-m

    # Run ansible app maintainance script
    tmux new-window -t $SESSION -n 'DWM'
    tmux send-keys -t $SESSION:4 "cd $HOME/.suckless/dwm/" C-m
    tmux send-keys -t $SESSION:4 'git status' C-m

    # Go back to React window
    tmux select-window -t $SESSION:1
fi
# Attach to the session
tmux attach -t $SESSION
