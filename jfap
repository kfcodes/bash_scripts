#!/bin/bash
set -euo pipefail

# ───── Paths ─────
BASE_DIR="$HOME/.production_apps"

# ───── Session & Windows ─────
SESSION="development"

# Window Names
MAIN="Running_Apps"

# ───── API Windows & Paths ─────
API_ENTRIES=(
  "PALLET_API=$BASE_DIR/apipallet"
  "LABEL_API=$BASE_DIR/apilabel"
  "NUTRITIONALS_API=$BASE_DIR/apinutritionals"
  # "PACKING_LIST_API=$BASE_DIR/packing_list_api"
)

# ───── Frontend Windows & Paths ─────
FRONT_ENTRIES=(
  "PALLET_APP=$BASE_DIR/apppallet"
  "NUTRITIONALS_APP=$BASE_DIR/appnutritionals"
)

# ───── Commands ─────
FASTAPI_VENV="source ../.venv/bin/activate"
GIT_DEV="git checkout dev ; git status"
GIT_MAIN="git checkout main && git status"

# ───── Create Session ─────
if ! tmux has-session -t "$SESSION" 2>/dev/null; then
    tmux new-session -d -s "$SESSION" -n "$MAIN"

    # ───── Main Window Panes ─────
    # Split horizontally
    tmux split-window -h -t "$SESSION:$MAIN"

        # Setting the API splits on the lefthand pane
        # ───── LEFT PANE (pane 1) ─────
        tmux select-pane -t "$SESSION:$MAIN.1"
        tmux send-keys -t "$SESSION:$MAIN.1" "cd \"$BASE_DIR/apipallet\"" C-m
        tmux send-keys -t "$SESSION:$MAIN.1" "$GIT_DEV" C-m
        tmux send-keys -t "$SESSION:$MAIN.1" "docker container stop palletapi && docker container rm palletapi ; docker compose up --build --detach && docker network connect application_network palletapi; docker logs -f palletapi" C-m
        tmux split-window -v -t "$SESSION:$MAIN.1"
        tmux send-keys -t "$SESSION:$MAIN.2" "cd \"$BASE_DIR/apilabel\"" C-m
        tmux send-keys -t "$SESSION:$MAIN.2" "$GIT_DEV" C-m
        tmux send-keys -t "$SESSION:$MAIN.2" "docker container stop labelapi && docker container rm labelapi ; docker compose up --build --detach && docker network connect application_network labelapi; docker logs -f labelapi" C-m
        tmux split-window -v -t "$SESSION:$MAIN.2"
        tmux send-keys -t "$SESSION:$MAIN.3" "cd \"$BASE_DIR/apinutritionals\"" C-m
        tmux send-keys -t "$SESSION:$MAIN.3" "docker container stop nutritionalsapi && docker container rm nutritionalsapi ; docker compose up --build --detach && docker network connect application_network nutritionalsapi; docker logs -f nutritionalsapi" C-m

        # ───── RIGHT PANE (pane 2) ─────
        # Setting the reactapp splits on the righthand pane
        tmux select-pane -t "$SESSION:$MAIN.4"
        tmux send-keys -t "$SESSION:$MAIN.4" "cd \"$BASE_DIR/apppallet\"" C-m
        tmux send-keys -t "$SESSION:$MAIN.4" "$GIT_DEV" C-m
        tmux send-keys -t "$SESSION:$MAIN.4" "docker container stop palletapp && docker container rm palletapp ; docker compose up --build --detach && docker network connect application_network palletapp; docker logs -f palletapp" C-m
        tmux split-window -v -t "$SESSION:$MAIN.4"
        tmux send-keys -t "$SESSION:$MAIN.5" "cd \"$BASE_DIR/appnutritionals\"" C-m
        tmux send-keys -t "$SESSION:$MAIN.5" "docker container stop nutritionalsapp && docker container rm nutritionalsapp ; docker compose up --build --detach && docker network connect application_network nutritionalsapp; docker logs -f nutritionalsapp" C-m

    # ───── API Windows ─────
    for entry in "${API_ENTRIES[@]}"; do
        IFS='=' read -r API APP_PATH <<< "$entry"
        tmux new-window -t "$SESSION" -n "$API"
        tmux send-keys -t "$SESSION:$API" "cd \"$APP_PATH/app\"" C-m
        tmux send-keys -t "$SESSION:$API" "$FASTAPI_VENV" C-m
        tmux send-keys -t "$SESSION:$API" "$GIT_DEV" C-m
    done

    # ───── Frontend Windows ─────
    for entry in "${FRONT_ENTRIES[@]}"; do
        IFS='=' read -r FRONT FRONT_PATH <<< "$entry"
        tmux new-window -t "$SESSION" -n "$FRONT"
        tmux send-keys -t "$SESSION:$FRONT" "cd \"$FRONT_PATH/src\"" C-m
        tmux send-keys -t "$SESSION:$FRONT" "$GIT_DEV" C-m
    done

    tmux select-window -t "$SESSION:$MAIN"
fi

tmux attach -t "$SESSION"
